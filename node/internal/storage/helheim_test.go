// This file was generated by github.com/nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package storage_test

import "github.com/coreos/etcd/raft/raftpb"

type mockReceiver struct {
	ReceiverCalled chan bool
	ReceiverInput  struct {
		BufferName chan string
	}
	ReceiverOutput struct {
		Ret0 chan func() (raftpb.Message, error)
	}
}

func newMockReceiver() *mockReceiver {
	m := &mockReceiver{}
	m.ReceiverCalled = make(chan bool, 100)
	m.ReceiverInput.BufferName = make(chan string, 100)
	m.ReceiverOutput.Ret0 = make(chan func() (raftpb.Message, error), 100)
	return m
}
func (m *mockReceiver) Receiver(bufferName string) func() (raftpb.Message, error) {
	m.ReceiverCalled <- true
	m.ReceiverInput.BufferName <- bufferName
	return <-m.ReceiverOutput.Ret0
}

type mockURIFinder struct {
	FromIDCalled chan bool
	FromIDInput  struct {
		ID chan uint64
	}
	FromIDOutput struct {
		Ret0 chan string
		Ret1 chan error
	}
}

func newMockURIFinder() *mockURIFinder {
	m := &mockURIFinder{}
	m.FromIDCalled = make(chan bool, 100)
	m.FromIDInput.ID = make(chan uint64, 100)
	m.FromIDOutput.Ret0 = make(chan string, 100)
	m.FromIDOutput.Ret1 = make(chan error, 100)
	return m
}
func (m *mockURIFinder) FromID(ID uint64) (string, error) {
	m.FromIDCalled <- true
	m.FromIDInput.ID <- ID
	return <-m.FromIDOutput.Ret0, <-m.FromIDOutput.Ret1
}
